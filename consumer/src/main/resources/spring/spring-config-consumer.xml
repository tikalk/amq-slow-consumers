<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">


    <import resource="classpath:spring/spring-config-notification.xml"/>



    <bean id="consumerListenerContainer"
          class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="connectionFactory"/>
        <property name="destinationName" value="${sample.source.queue}"/>
        <property name="messageListener" ref="consumerListener"/>
        <!-- this will cause the session to participate in
            the DataSourceTransactionManager but its not xa transaction,
             the jms session will be committed AFTER the jdbc connection was committed.
             which is good for the consumer, if the DB commit failed the message will
             remain in the queue -->
        <!--<property name="sessionTransacted" value="true"/>-->
        <!-- if the session is transacted the message acknowledge in handled in session commit -->
        <!--<property name="sessionAcknowledgeMode">-->
        <!--<util:constant static-field="javax.jms.Session.CLIENT_ACKNOWLEDGE"/>-->
        <!--</property>-->

        <!-- use this only for debugging, or start the listener yourself -->
        <!--<property name="autoStartup" value="false"/>-->
    </bean>


    <bean id="consumerListener" class="com.tikal.amq.consumer.ConsumerListener">
    </bean>




    <bean id="connectionFactory"
          class="org.springframework.jms.connection.CachingConnectionFactory">
        <property name="targetConnectionFactory">
            <bean class="org.apache.activemq.ActiveMQConnectionFactory">
                <property name="brokerURL"
                          value="${broker.url}"/>
                <property name="userName" value="${amq.user.name}"/>
                <property name="password" value="${amq.user.pass}"/>
            </bean>
        </property>
        <property name="sessionCacheSize" value="10"/>
        <property name="cacheProducers" value="false"/>
        <!-- need clientid for durable subscription -->
        <property name="clientId" value="${clientId}"/>
    </bean>



    <bean id="propertyPlaceholder"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:consumer.properties</value>
            </list>
        </property>
    </bean>


</beans>
